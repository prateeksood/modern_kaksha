[{"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\App.js":"1","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\AuthPage\\authPage.js":"2","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\choosePlanPage\\choosePlanPage.js":"3","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Nav\\nav.js":"4","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Header\\header.js":"5","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\data\\data.js":"6","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentLoginForm\\studentLoginForm.js":"7","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Loader\\loader.js":"8","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorInfoForm\\tutorInfoForm.js":"9","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentInfoForm\\studentInfoForm.js":"10","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\connectPage\\connectPage.js":"11","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\tutorFeeDetailForm\\tutorFeeDetailForm.js":"12","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\UserCard\\userCard.js":"13","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TopTutors\\topTutors.js":"14","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorRegistrationForm\\tutorRegistrationForm.js":"15","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\ProfilePage\\ProfilePage.js":"16","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\AuthForm\\authForm.js":"17","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\SearchTutorSection\\searchTutorSection.js":"18","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\registerationFormValidationRules.js":"19","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\SubjectsCarousel\\subjectsCarousel.js":"20","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\loginFormValidationsRules.js":"21","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorLoginForm\\tutorLoginForm.js":"22","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\HomePage\\homePage.js":"23","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\RegisterSection\\registerSection.js":"24","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\index.js":"25","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\PaymentSuccessPage\\paymentSuccessPage.js":"26","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Footer\\footer.js":"27","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\MsgBanner\\msgBanner.js":"28","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\context\\userContext.js":"29","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentRegistrationForm\\studentRegistrationForm.js":"30","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Slidder\\slidder.js":"31","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorVerifyEmail\\tutorVerifyEmail.js":"32","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\otpValidationRules.js":"33","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentVerifyEmail\\studentVerifyEmail.js":"34","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\tutorFeeDetailFormValidationRules.js":"35","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\ContactUsForm\\contactUsForm.js":"36","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\PageNotFoundErrorPage\\pageNotFoundErrorPage.js":"37","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\reviewFormValidationsRules.js":"38","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\tutorInfoFormValidationRules.js":"39","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\contactFormFormValidationsRules .js":"40"},{"size":2554,"mtime":1608485387967,"results":"41","hashOfConfig":"42"},{"size":582,"mtime":1608747178621,"results":"43","hashOfConfig":"42"},{"size":14520,"mtime":1608809799552,"results":"44","hashOfConfig":"42"},{"size":7930,"mtime":1608709847840,"results":"45","hashOfConfig":"42"},{"size":695,"mtime":1607364097811,"results":"46","hashOfConfig":"42"},{"size":1615,"mtime":1608799152246,"results":"47","hashOfConfig":"42"},{"size":4665,"mtime":1608375993579,"results":"48","hashOfConfig":"42"},{"size":589,"mtime":1608125158290,"results":"49","hashOfConfig":"42"},{"size":19967,"mtime":1608802587888,"results":"50","hashOfConfig":"42"},{"size":9068,"mtime":1608801598506,"results":"51","hashOfConfig":"42"},{"size":16009,"mtime":1608803493130,"results":"52","hashOfConfig":"42"},{"size":9179,"mtime":1608376763909,"results":"53","hashOfConfig":"42"},{"size":4726,"mtime":1608805761425,"results":"54","hashOfConfig":"42"},{"size":2452,"mtime":1608806512758,"results":"55","hashOfConfig":"42"},{"size":8884,"mtime":1608314845398,"results":"56","hashOfConfig":"42"},{"size":17863,"mtime":1608749458420,"results":"57","hashOfConfig":"42"},{"size":5014,"mtime":1608366565426,"results":"58","hashOfConfig":"42"},{"size":1917,"mtime":1608801587566,"results":"59","hashOfConfig":"42"},{"size":1392,"mtime":1606904399563,"results":"60","hashOfConfig":"42"},{"size":2627,"mtime":1608754764001,"results":"61","hashOfConfig":"42"},{"size":417,"mtime":1606903400925,"results":"62","hashOfConfig":"42"},{"size":4861,"mtime":1608733835894,"results":"63","hashOfConfig":"42"},{"size":956,"mtime":1608748929168,"results":"64","hashOfConfig":"42"},{"size":3240,"mtime":1608288639171,"results":"65","hashOfConfig":"42"},{"size":500,"mtime":1608213080275,"results":"66","hashOfConfig":"42"},{"size":1260,"mtime":1608749107039,"results":"67","hashOfConfig":"42"},{"size":3459,"mtime":1608562699064,"results":"68","hashOfConfig":"42"},{"size":1935,"mtime":1608281343843,"results":"69","hashOfConfig":"42"},{"size":1513,"mtime":1608396235969,"results":"70","hashOfConfig":"42"},{"size":9227,"mtime":1608746716114,"results":"71","hashOfConfig":"42"},{"size":1547,"mtime":1608752835873,"results":"72","hashOfConfig":"42"},{"size":4627,"mtime":1608648907136,"results":"73","hashOfConfig":"42"},{"size":282,"mtime":1608314430914,"results":"74","hashOfConfig":"42"},{"size":4647,"mtime":1608648933497,"results":"75","hashOfConfig":"42"},{"size":1525,"mtime":1608376638050,"results":"76","hashOfConfig":"42"},{"size":7706,"mtime":1608748759781,"results":"77","hashOfConfig":"42"},{"size":1067,"mtime":1608749047344,"results":"78","hashOfConfig":"42"},{"size":456,"mtime":1607419883920,"results":"79","hashOfConfig":"42"},{"size":986,"mtime":1606934631247,"results":"80","hashOfConfig":"42"},{"size":960,"mtime":1608667095760,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"11mngm9",{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"88"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"84"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"94"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"88"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"94"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"186"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"88"},"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\App.js",[],["190","191"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\AuthPage\\authPage.js",["192"],"import {Helmet} from \"react-helmet\";\r\nimport React from \"react\";\r\nimport AuthForm from '../AuthForm/authForm'\r\n\r\nexport default ()=> {\r\n  return (\r\n    <div >\r\n      <Helmet>\r\n          <title>Register with Delta Educators | Login to your account|Delta Educators</title>\r\n          <meta\r\n              name=\"description\"\r\n              content=\"Register with Delta Educators to find quality teachers near you. Or start teaching with us, near you at your convinience. Sign up today or Login to your account. \"\r\n          />\r\n      </Helmet>\r\n      <AuthForm/>\r\n    </div>\r\n  );\r\n}\r\n",["193","194"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\choosePlanPage\\choosePlanPage.js",["195","196","197"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Nav\\nav.js",["198","199","200","201","202","203"],"import React, { useEffect, useState,useContext} from \"react\";\r\nimport { userContext } from \"../../context/userContext\";\r\nimport { NavLink,useLocation, Link, Redirect, useHistory} from \"react-router-dom\";\r\nimport {motion} from 'framer-motion'\r\nimport Aos from 'aos';\r\nimport logo from '../../resources/images/logo2.png'\r\nimport 'aos/dist/aos.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBars, faPlus, faSignInAlt, faUser} from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './nav.module.scss';\r\nconst Nav =() => {\r\n  const {alertMsg,setAlertMsg,user,userLoaded,setUser,setBannerMsg} = useContext(userContext);\r\n  const location=useLocation();\r\n  const [isNavOpen,setIsNavOpen]=useState(false);\r\n  const [isSubMenuOpen,setIsSubMenuOpen]=useState(false);\r\n  const history=useHistory();\r\n  useEffect(()=>{\r\n    if(alertMsg){\r\n      window.setTimeout(()=>{\r\n          setAlertMsg(null)\r\n      },3000);\r\n    }\r\n  },[alertMsg])\r\n\r\n  const logout=()=>{\r\n    localStorage.removeItem('token');\r\n    setUser(null);\r\n    setBannerMsg({message:'Logged out successfully'});\r\n    closeNav();\r\n    \r\n  }\r\n  const [showThinNav,setShowThinNav]=useState(()=>{\r\n    if(location.pathname==='/'){\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  });\r\n  const [scrollHeight,setScrollHeight]=useState(()=>{\r\n    if(location.pathname==='/'){\r\n      return (250);\r\n    }\r\n    else{\r\n      return (0);\r\n    }\r\n  });\r\n  \r\n  useEffect(()=>{\r\n    if(location.pathname==='/'){\r\n      setScrollHeight(250);\r\n    }\r\n    else{\r\n      setScrollHeight(0);\r\n    }\r\n  },[location])\r\n\r\n  useEffect(()=>{\r\n    Aos.init({duration:2000})\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    if(location.pathname==='/'){\r\n      setShowThinNav(false);\r\n    }\r\n    else{\r\n      setShowThinNav(true);\r\n    }\r\n    window.addEventListener('scroll',toggleThinNav);\r\n    return ()=>{\r\n       window.removeEventListener('scroll',toggleThinNav);\r\n    }\r\n  },[scrollHeight]);\r\n\r\n\r\n  const toggleProfileSubMenu=()=>{\r\n    setIsSubMenuOpen(prev=>!prev);\r\n  }\r\n\r\n  const toggleNav=()=>{\r\n      setIsNavOpen(prev=>!prev)\r\n  }\r\n\r\n\r\n  const closeNav=()=>{\r\n    setIsNavOpen(false)\r\n  }\r\n\r\n\r\n  const toggleThinNav=()=>{\r\n    if(window.scrollY>=scrollHeight){\r\n      setShowThinNav(true);\r\n    }\r\n    else{\r\n      setShowThinNav(false);\r\n    }\r\n  }\r\n  return (\r\n    \r\n    <React.Fragment>\r\n      {location.pathname==='/'&&\r\n      <>\r\n      <div className={styles.burgerMenu} ><FontAwesomeIcon icon={faBars} onClick={toggleNav}></FontAwesomeIcon></div>\r\n      <motion.nav initial={{opacity:0}} animate={{opacity:1}} className={isNavOpen?`${styles.activeNav} ${styles.nav}`:`${styles.hiddenNav} ${styles.nav}`}>\r\n        <div className={styles.navBar}>\r\n            <div className={styles.navLinkContainer}>\r\n              <div className={styles.closeBtn}><FontAwesomeIcon icon={faPlus}  onClick={toggleNav}></FontAwesomeIcon></div>\r\n              <div className={`${styles.navLink}`} onClick={closeNav}><NavLink exact to=\"/\" activeClassName={styles.activeNavLink}>Home</NavLink></div>\r\n              <div className={styles.navLink}><NavLink exact to=\"/connect\" onClick={closeNav} activeClassName={styles.activeNavLink}>Connect</NavLink></div>\r\n              <div className={styles.navLink}><NavLink exact to=\"/choose-plan\" onClick={closeNav} activeClassName={styles.activeNavLink}>Buy Credits</NavLink></div>\r\n              <div className={styles.navLink}><NavLink exact to=\"/contact-us\" onClick={closeNav} activeClassName={styles.activeNavLink}>Contact Us</NavLink></div>\r\n              {user?\r\n                <>\r\n                  <div className={styles.mobileOnlyNavLink}><NavLink exact to={`/profile/${user._id}`} onClick={closeNav}>{user.connectsLeft} Connects</NavLink></div>\r\n                  <div className={styles.mobileOnlyNavLink}><NavLink to={`/profile/${user._id}`} onClick={closeNav} activeClassName={styles.activeNavLink}>View Profile</NavLink></div>\r\n                  {location.pathname!=='/auth'&&<div className={styles.mobileOnlyNavLink} onClick={logout}>Logout</div>}\r\n                </>\r\n              :\r\n                <div className={styles.mobileOnlyNavLink}><NavLink exact to=\"/auth\" onClick={closeNav}>Login</NavLink></div>\r\n              }\r\n            </div> \r\n        </div>\r\n      </motion.nav>\r\n      </>\r\n}\r\n{showThinNav&&\r\n    <>\r\n      <motion.nav className={styles.thinNav} initial={{height:0,opacity:0}} animate={{height:'70px',opacity:1}} transition={{ duration: .2 }}>\r\n        <div className={styles.thinNavHolder}>\r\n        <Link to=\"/\" className={styles.titleHolder}><img src={logo}/> <div className={styles.thinNavTitle}>Delta Educators</div></Link>\r\n          <div className={isNavOpen?`${styles.activeNav} ${styles.navLinkContainer}`:`${styles.hiddenNav} ${styles.thinNavLinkContainer}`}>\r\n              <div className={styles.closeBtn}><FontAwesomeIcon icon={faPlus} onClick={toggleNav}></FontAwesomeIcon></div>\r\n              <div className={styles.navLink}><NavLink exact to=\"/\" onClick={closeNav} activeClassName={styles.activeThinNavLink}>Home</NavLink></div>\r\n              <div className={styles.navLink}><NavLink exact to=\"/connect\" onClick={closeNav} activeClassName={styles.activeThinNavLink}>Connect</NavLink></div>\r\n              <div className={styles.navLink}><NavLink exact to=\"/choose-plan\" onClick={closeNav} activeClassName={styles.activeThinNavLink}>Buy Credits</NavLink></div>\r\n              <div className={styles.navLink}><NavLink exact to=\"/contact-us\" onClick={closeNav} activeClassName={styles.activeThinNavLink}>Contact Us</NavLink></div>\r\n              {user?\r\n                <>\r\n                  <div className={styles.mobileOnlyNavLink}><NavLink exact to={`/profile/${user._id}`} onClick={closeNav}>{user.connectsLeft} Connects</NavLink></div>\r\n                  <div className={styles.mobileOnlyNavLink}><NavLink to={`/profile/${user._id}`} onClick={closeNav} activeClassName={styles.activeThinNavLink}>View Profile</NavLink></div>\r\n                  {location.pathname!=='/auth'&&<div className={styles.mobileOnlyNavLink} onClick={logout}>Logout</div>}\r\n                </>\r\n              :\r\n                  <div className={styles.mobileOnlyNavLink}><NavLink exact to=\"/auth\" onClick={closeNav}>Login</NavLink></div>\r\n              }\r\n              \r\n              {user?\r\n                <div className={`${styles.navLink} ${styles.profileLink}`} onClick={toggleProfileSubMenu}><FontAwesomeIcon icon={faUser}/>{user.name.split(\" \")[0]}</div>\r\n              :\r\n              <div className={`${styles.navLink} ${styles.profileLink}`}><Link to=\"/auth\"><FontAwesomeIcon icon={faSignInAlt}/>Login</Link></div>\r\n              }\r\n          </div>\r\n          <motion.div className={styles.burgerMenuThinNav} initial={{fontSize:'0'}} animate={{fontSize:'2.5em'}}><FontAwesomeIcon icon={faBars} onClick={toggleNav} ></FontAwesomeIcon></motion.div>\r\n        </div>\r\n        {alertMsg&&\r\n        <motion.div className={styles.errorBanner} initial={{opacity:0,y:-30}} animate={{opacity:1,y:0}}>\r\n          <div>{alertMsg.message}</div>\r\n          <span onClick={()=>{setAlertMsg(null)}}>X</span>\r\n        </motion.div> }\r\n       {(user&&isSubMenuOpen)&&\r\n          <motion.div className={styles.profileSubMenu} initial={{opacity:0,y:-100}} animate={{opacity:1,y:0}}>\r\n            <div className={styles.triangleTip}></div>\r\n            <div className={styles.profileSubMenuItemHolder}>\r\n              <div className={styles.subLink}>{user.connectsLeft} Connects</div>\r\n              <div className={styles.subLink} onClick={toggleProfileSubMenu}><Link to={`/profile/${user._id}`}>View Profile</Link></div>\r\n              {location.pathname!=='/auth'&&<div className={styles.subLink} onClick={logout}>Logout</div>}\r\n            </div>\r\n          </motion.div>\r\n      }\r\n      </motion.nav>\r\n      \r\n      </>\r\n}\r\n    </React.Fragment>  \r\n  );\r\n};\r\nexport default Nav;\r\n",["204","205"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Header\\header.js",["206","207"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\data\\data.js",[],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentLoginForm\\studentLoginForm.js",["208","209"],"import React,{useEffect,useState,useContext} from 'react';\r\nimport {Redirect, useHistory} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {userContext} from '../../context/userContext'\r\nimport useForm from '../../hooks/useForm'\r\nimport validationRules from '../../validationRules/loginFormValidationsRules'\r\nimport {motion} from 'framer-motion'\r\nimport styles from '../AuthForm/authForm.module.scss'\r\n\r\nconst StudentLoginForm=({formType, setFormType,backUrl})=> {\r\n\r\n    const [loginSuccess,setLoginSuccess]=useState(false);\r\n    const [isLoading,setIsLoading]=useState(false);\r\n    const {setUser,setAlertMsg,userLoaded, setBannerMsg,user} = useContext(userContext);\r\n    const history=useHistory();\r\n    useEffect(()=>{\r\n        if(userLoaded){\r\n          localStorage.removeItem('token');\r\n          setUser(null);\r\n        }\r\n        \r\n      },[userLoaded]);\r\n\r\n      useEffect(()=>{\r\n        if(user){\r\n            if(!user.isVerified){\r\n                setAlertMsg({message:'Verify your email to proceed'})\r\n                setFormType('studentVerifyEmailForm')\r\n            }\r\n            else if(!user.isStepOneDone){\r\n                setAlertMsg({message:'Complete registration to proceed'})\r\n                setFormType('studentInfoForm')\r\n            }\r\n            else{\r\n                setLoginSuccess(true)\r\n            }\r\n        }\r\n    },[user,setFormType,setAlertMsg])\r\n\r\n    const loginHandler = async () => {\r\n        const data = {\r\n          email: values.email,\r\n          password: values.password\r\n        };\r\n        try{\r\n            setIsLoading(true)\r\n            let res= await axios.post(`${process.env.REACT_APP_API_URL}/students/login`, data)\r\n            if (!res.data.error) {\r\n                localStorage.setItem(\"token\", res.data.result.token);\r\n                setBannerMsg({message:`Welcome back ${res.data.result.user.name}`})\r\n                setIsLoading(false);\r\n                setUser(res.data.result.user);\r\n            } \r\n            else {\r\n                localStorage.removeItem(\"token\");\r\n                setUser(null);\r\n                setAlertMsg({message:res.data.error});\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            setBannerMsg({message:`Something went wrong!`});\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n    loginHandler,\r\n    validationRules\r\n    );\r\n    if(loginSuccess&&!isLoading){   \r\n        return (<Redirect to={backUrl||'/'}/>)\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <motion.form initial={{opacity:0,x:-300}} animate={{opacity:1,x:0}} onSubmit={handleSubmit} autoComplete=\"off\">\r\n            <h3>Student Login</h3>\r\n            <div className={styles.inputContainer}>\r\n                \r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className={`${errors.email? styles.validationError:styles.inputBox}`}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"\"\r\n                        value={values.email || \"\"}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className={styles.errorMsg}>{errors.email}</div>\r\n                </div>\r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className={`${errors.password? styles.validationError:styles.inputBox}`}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"\"\r\n                        value={values.password || \"\"}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className={styles.errorMsg}>{errors.password}</div>\r\n                </div>\r\n                \r\n                <div className={styles.inputHolder}>\r\n                        <input\r\n                            type=\"submit\"\r\n                            value={isLoading?`Loading...`:`Login`}\r\n                            disabled={isLoading}\r\n                        />\r\n                </div>\r\n                <p>New here? \r\n                    <span onClick={()=>{setFormType('studentRegistration')}}>Register</span>\r\n                </p>\r\n            </div>\r\n        </motion.form>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default StudentLoginForm;","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Loader\\loader.js",[],["210","211"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorInfoForm\\tutorInfoForm.js",["212","213","214"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentInfoForm\\studentInfoForm.js",["215","216"],"import React,{useEffect, useState,useContext} from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios';\r\nimport { userContext } from \"../../context/userContext\";\r\nimport useForm from '../../hooks/useForm'\r\nimport validationRules from '../../validationRules/tutorInfoFormValidationRules'\r\nimport Select from 'react-dropdown-select';\r\nimport {motion} from 'framer-motion';\r\nimport {subjects,studentClasses} from '../../data/data'\r\nimport 'aos/dist/aos.css'\r\nimport styles from '../AuthForm/authForm.module.scss'\r\n\r\nconst TutorInfoForm= ({formType, setFormType,backUrl})=> {\r\n    const [district,setDistrict]=useState();\r\n    const [state,setState]=useState();\r\n    const [studyingMode,setStudyingMode]=useState('online');\r\n    const [subjectList,setSubjectList]=useState([])\r\n    const [studentClass,setStudentClass]=useState();\r\n    const [localErrors,setLocalErrors]=useState({});\r\n    const [isLoading,setIsLoading]=useState(false);\r\n    const [isSubmited,setIsSubmited]=useState(false);\r\n    const {setUser,setAlertMsg,userLoaded,user,setBannerMsg} = useContext(userContext);\r\n\r\n    const onStudentClassChange=(classes) =>{\r\n        setStudentClass(classes[0].value);\r\n        setLocalErrors(prev=>({...prev,studentClassesDropdwn:''}))\r\n    }\r\n    const onSubjectChange=(subjects)=>{\r\n        let arr=subjects.map(subject=>subject.value)\r\n        setSubjectList(arr);\r\n        setLocalErrors(prev=>({...prev,subjectDropdown:''}))\r\n    }\r\n    const submitHandler = async () => {\r\n        setIsLoading(true);\r\n        if(values.pincode.length===6){\r\n            const targetPins=[parseInt(values.pincode)+1,parseInt(values.pincode),parseInt(values.pincode)-1]\r\n            targetPins.forEach((pin,i)=>{\r\n                axios.get(`https://api.postalpincode.in/pincode/${pin}`)\r\n                .then(res=>{\r\n                    if(res.data[0].Status===\"Success\"){\r\n                        setDistrict(`${res.data[0].PostOffice[0].Block},${res.data[0].PostOffice[0].District}`);\r\n                        setState(res.data[0].PostOffice[0].State)\r\n                    }\r\n                    else{\r\n                        if(i===1){\r\n                            setAlertMsg({message:`Invalid pin ${pin}`});\r\n                            setLocalErrors(prev=>({...prev,pincode:'Invalid Pincode'}));\r\n                            return\r\n                        }\r\n                    }\r\n                })\r\n                .catch(err=>console.log(err))\r\n            })\r\n            setIsLoading(false);\r\n        }\r\n        if(subjectList.length===0){\r\n            setLocalErrors(prev=>({...prev,subjectDropdown:'Select atleast one subject'}));\r\n            return\r\n        }\r\n        if(!studentClass){\r\n            setLocalErrors(prev=>({...prev,studentClassesDropdwn:'Select your Class'}));\r\n            return\r\n        }\r\n        const data = {\r\n            _id:user._id,\r\n            studyingMode:studyingMode,\r\n            pincode:values.pincode,\r\n            subjects:subjectList,\r\n            classOfStudy:studentClass,\r\n            isStepOneDone:true,\r\n            isActive:true,\r\n            district:district,\r\n            state:state\r\n        };\r\n        try{\r\n            setIsLoading(true);\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/students/update`,data,{headers:{'x-auth-token':localStorage.getItem(\"token\")}});\r\n            if(!res.data.error){\r\n                setUser(res.data.result);\r\n                setIsSubmited(true);\r\n            }\r\n            else {\r\n                setAlertMsg({message:res.data.error});\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            setBannerMsg({message:`Something went wrong!`});\r\n        } \r\n        setIsLoading(false);\r\n    };\r\n    const changeStudyingMode=(e)=>{\r\n        setStudyingMode(e.target.value);\r\n    }\r\n    const { values, errors, handleChange, handleSubmit} = useForm(\r\n        submitHandler,\r\n        validationRules\r\n    );\r\n\r\n    if(isSubmited&&!isLoading){\r\n        return(<Redirect to={backUrl||''}/>)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n                <motion.form initial={{opacity:0,x:-300}} animate={{opacity:1,x:0}} onSubmit={handleSubmit}>\r\n                    <h3>Few more steps</h3>\r\n                    <div className={styles.inputContainer}>\r\n        {/*======================== Studying place  radio buttons===========================*/}\r\n                        <div className={styles.radioLabelHolder}><label htmlFor='studyingLocation'>Where would you like to study?</label></div>\r\n                        <div className={styles.radioBtnHolder}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"studyingLocation\"\r\n                                id=\"online\"\r\n                                value=\"online\"\r\n                                checked={studyingMode==='online'}\r\n                                onChange={changeStudyingMode}\r\n                            />\r\n                            <label htmlFor='online'>Online</label>\r\n                        </div>\r\n                        <div className={styles.radioBtnHolder}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"studyingLocation\"\r\n                                id=\"student-place\"\r\n                                value=\"student\"\r\n                                checked={studyingMode==='student'}\r\n                                onChange={changeStudyingMode}\r\n                            />\r\n                            <label htmlFor='student-place'>At your place</label>\r\n                        </div>\r\n                        <div className={styles.radioBtnHolder}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"studyingLocation\"\r\n                                id=\"teacher-place\"\r\n                                value=\"teacher\"\r\n                                checked={studyingMode==='teacher'}\r\n                                onChange={changeStudyingMode}\r\n                            />\r\n                            <label htmlFor='teacher-place'>At teacher's place / Institute</label>\r\n                        </div>\r\n                {/* =================================Pincode section===================================== */}\r\n                        <div className={styles.inputHolder}>\r\n                            <label htmlFor='pincode'>Pincode</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className={`${errors.pincode? styles.validationError:styles.inputBox}`}\r\n                                name=\"pincode\"\r\n                                id=\"pincode\"\r\n                                placeholder=\"\"\r\n                                value={values.pincode || \"\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className={styles.errorMsg}>{errors.pincode||localErrors.pincode}</div>\r\n                        </div>\r\n                {/* ========================== Subjects dropdown======================= */}\r\n                        <div className={styles.dropdownHolder}>\r\n                            <label>Select subjects you want to study</label>\r\n                            <Select\r\n                                multi\r\n                                options={subjects}\r\n                                onChange={onSubjectChange}\r\n                                color=\"#2876A0\"\r\n                            />\r\n                            <div className={styles.errorMsg}>{localErrors.subjectDropdown}</div>\r\n                        </div>\r\n\r\n                {/* ============================Highest education drop down=================== */}\r\n                    <div className={styles.dropdownHolder}>\r\n                        <label>Select your class</label>\r\n                        <Select\r\n                            options={studentClasses}\r\n                            onChange={onStudentClassChange}\r\n                            color=\"#2876A0\"\r\n                        />\r\n                        <div className={styles.errorMsg}>{localErrors.studentClassesDropdwn}</div>\r\n                    </div>\r\n                    \r\n                {/* ==========================Submit button============================= */}\r\n                        <div className={styles.inputHolder}>\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    className={`${styles.inputBox}`}\r\n                                    value={isLoading?`Loading...`:`Submit`}\r\n                                    disabled={isLoading}\r\n                                />\r\n                        </div>\r\n                    </div>                    \r\n                </motion.form>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default TutorInfoForm;\r\n","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\connectPage\\connectPage.js",["217","218","219","220","221","222","223"],"import React,{useEffect, useState,useContext,useRef, useCallback} from \"react\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport axios from 'axios'\r\nimport Select from 'react-dropdown-select';\r\nimport {subjects} from '../../data/data'\r\nimport styles from './connectPage.module.scss';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {} from '@fortawesome/fontawesome-svg-core'\r\nimport UserCard from '../UserCard/userCard'\r\nimport {userContext} from '../../context/userContext'\r\nimport { faFilter, faPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loader from \"../Loader/loader\";\r\nimport { Redirect, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nconst ConnectPage=() => {\r\n    const pageSize=5;\r\n    const history=useHistory();\r\n    const [refresh,setRefresh]=useState(true);\r\n    const [isLoading,setIsLoading]=useState(true);\r\n    const [hasMore,setHasMore]=useState(true);\r\n    const [pageNumber,setPageNumber]=useState(1);\r\n    const [profiles,setProfiles]=useState([]);\r\n    const [feeModeFilter,setFeeModeFilter]=useState('allfees');\r\n    const [minimumFees,setMinimumFees]=useState(0);\r\n    const [maximumFees,setMaximumFees]=useState(500000);\r\n    const {setBannerMsg,user,userLoaded,setAlertMsg}=useContext(userContext);\r\n    const location=useLocation();\r\n    const [data,setData]=useState({\r\n        feesPeriod:'allfees',\r\n        pincodes:[],\r\n        minimumFees:0,\r\n        maximumFees:500000,\r\n        subjects:[],\r\n        pageNumber:1,\r\n        pageSize:pageSize\r\n    })\r\n    const [subjectList, setSubjectList]=useState(()=>{\r\n        if(location.state){\r\n            if(location.state.subjectList){\r\n                return location.state.subjectList;\r\n            }\r\n        }\r\n        return [];\r\n    });\r\n    const[nearAroundLocations,setNearAroundLocations]=useState([]);\r\n    const [areLocationsLoading,setAreLocationsLoading]=useState(false);\r\n    const [isFilterMenuOpen,setIsFilterMenuOpen]=useState(false);\r\n    const [pincode,setPincode]=useState(()=>{\r\n        if(location.state){\r\n            if(location.state.pincode){\r\n                return location.state.pincode;\r\n            }\r\n        }\r\n        return\r\n    });\r\n    useEffect(()=>{\r\n        if(refresh){\r\n            setPageNumber(1);\r\n        }\r\n    },[refresh])\r\n    useEffect(()=>{\r\n        window.scroll(0,0)\r\n    },[]);\r\n    useEffect(()=>{\r\n        if(userLoaded&&!user){\r\n            setAlertMsg({message:'kindly login to continue'})\r\n            history.push({\r\n                pathname:'/auth',\r\n                state:{backUrl:location.pathname}\r\n            })\r\n        }\r\n        \r\n        else if(userLoaded&&(user.accountType==='teacher')&&(!user.isVerified)){\r\n            setAlertMsg({message:'kindly complete registeration to continue'})\r\n            history.push({\r\n                pathname:'/auth',\r\n                state:{backUrl:location.pathname,formType:'tutorVerifyEmailForm'}\r\n            })\r\n        }\r\n        else if(userLoaded&&(user.accountType==='teacher')&&(!user.isStepOneDone)){\r\n            setAlertMsg({message:'kindly complete registeration to continue'})\r\n            history.push({\r\n                pathname:'/auth',\r\n                state:{backUrl:location.pathname,formType:'tutorInfoForm'}\r\n            })\r\n        }\r\n\r\n        else if(userLoaded&&(user.accountType==='teacher')&&(!user.isStepTwoDone)){\r\n            setAlertMsg({message:'kindly complete registeration to continue'})\r\n            history.push({\r\n                pathname:'/auth',\r\n                state:{backUrl:location.pathname,formType:'tutorFeeDetailForm'}\r\n            })\r\n        }\r\n        \r\n        else if(userLoaded&&(user.accountType==='student')&&(!user.isVerified)){\r\n            setAlertMsg({message:'kindly complete registeration to continue'})\r\n            history.push({\r\n                pathname:'/auth',\r\n                state:{backUrl:location.pathname,formType:'studentVerifyEmailForm'}\r\n            })\r\n        }\r\n        else if(userLoaded&&(user.accountType==='student')&&(!user.isStepOneDone)){\r\n            setAlertMsg({message:'kindly complete registeration to continue'})\r\n            history.push({\r\n                pathname:'/auth',\r\n                state:{backUrl:location.pathname,formType:'studentInfoForm'}\r\n            })\r\n        }\r\n        \r\n    },[user,userLoaded])\r\n    useEffect(()=>{\r\n        const fetchTeachers=async ()=>{\r\n            setIsLoading(true)\r\n            try{\r\n                const res= await axios.post(`${process.env.REACT_APP_API_URL}/teachers/`,data);\r\n                if(!res.data.error){\r\n                    setHasMore(res.data.result.length===pageSize)\r\n                    if(refresh){\r\n                        setProfiles(res.data.result);\r\n                    }\r\n                    else{\r\n                        setProfiles(prev=>prev.concat(res.data.result));\r\n                    }\r\n                }\r\n            }\r\n            catch(err){\r\n                setBannerMsg({message:`Something went wrong!`});\r\n                setIsLoading(false)\r\n            }\r\n            finally{\r\n                setIsLoading(false)\r\n            }\r\n                \r\n        }\r\n\r\n        const fetchStudents=async ()=>{\r\n            setIsLoading(true);\r\n\r\n            try{\r\n\r\n                const res= await axios.post(`${process.env.REACT_APP_API_URL}/students/`,data);\r\n                if(!res.data.error){\r\n                    setHasMore(res.data.result.length===pageSize)\r\n                    if(refresh){\r\n                        setProfiles(res.data.result);\r\n                    }\r\n                    else{\r\n                        setProfiles(prev=>prev.concat(res.data.result));\r\n                    }\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                setBannerMsg({message:`Something went wrong!`});\r\n                setIsLoading(false)\r\n            }\r\n            finally{\r\n                setIsLoading(false)\r\n            }\r\n                \r\n        }\r\n        if(user&&user.isStepOneDone&&user.isVerified){\r\n            if(user.accountType==='teacher'){\r\n                fetchStudents();\r\n            }else{\r\n                fetchTeachers();\r\n            }\r\n        }\r\n        \r\n    },[data,user]);\r\n    useEffect(()=>{\r\n        let pincodes=pincode;\r\n        if(pincode){\r\n            pincodes=[pincode,pincode+1,pincode-1]\r\n        }else{\r\n            pincodes=[];\r\n        }\r\n        setData({\r\n            feesPeriod:feeModeFilter,\r\n            pincodes:pincodes,\r\n            minimumFees,\r\n            maximumFees,\r\n            subjects:subjectList,\r\n            pageNumber,\r\n            pageSize:pageSize\r\n        })\r\n    },[feeModeFilter,pincode,minimumFees,maximumFees,subjectList,setData,pageNumber]);\r\n    const changePageNumber=()=>{\r\n        setRefresh(false);\r\n        setPageNumber(prev=>prev+1);\r\n    }\r\n    const changeFeeModeFilter=(e)=>{\r\n        setFeeModeFilter(e.target.value);\r\n        setRefresh(true);\r\n    }\r\n\r\n    const changeMinimumFees=(e)=>{\r\n        setRefresh(true);\r\n        if(!e.target.value){\r\n            setMinimumFees(0)\r\n        }\r\n        else{\r\n            setMinimumFees(e.target.value)\r\n        }\r\n    }\r\n\r\n    const changeMaximumFees=(e)=>{\r\n        setRefresh(true);\r\n        if(!e.target.value){\r\n            setMaximumFees(500000)\r\n        }\r\n        else{\r\n            setMaximumFees(e.target.value)\r\n        } \r\n    }\r\n\r\n    const pincodeChangeHandler=(e)=>{\r\n        setNearAroundLocations([]);\r\n        setRefresh(true);\r\n        setPincode(parseInt(e.target.value));\r\n        if(e.target.value.length===6){\r\n            let pin=parseInt(e.target.value)\r\n            setAreLocationsLoading(true)\r\n            const targetPins=[pin,pin+1,pin-1,pin+2,pin-2]\r\n            targetPins.forEach((pin)=>{\r\n                axios.get(`https://api.postalpincode.in/pincode/${pin}`)\r\n                .then(res=>{\r\n                    if(res.data[0].Status===\"Success\"){\r\n                        res.data[0].PostOffice.forEach((location,i)=>{\r\n                            setNearAroundLocations(prev=>[...prev,{id:(prev.length+1),name:location.Name}])\r\n                        })\r\n                    }\r\n                    setAreLocationsLoading(false)\r\n                })\r\n                .catch(\r\n                    err=>\r\n                    {\r\n                        console.log(err)\r\n                        setBannerMsg({message:`Something went wrong!`});\r\n                    }\r\n                )\r\n            })\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const showFilterMenu=()=>{\r\n        setIsFilterMenuOpen(true)\r\n    }\r\n\r\n    const hideFilterMenu=()=>{\r\n        setIsFilterMenuOpen(false)\r\n    }\r\n\r\n    const onSubjectChange=(subjects)=>{\r\n        setRefresh(true);\r\n        let arr=subjects.map(subject=>subject.value)\r\n        setSubjectList(arr);\r\n    }\r\n    if(user)\r\n    {\r\n        return (\r\n            <React.Fragment>\r\n                {user.accountType==='student'?\r\n                <Helmet>\r\n                    <title>Find best tutor near you and online | Delta Educators</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Find tutor near you. We at Delta Educators have tutors not only for subjects like Mathematics, Economics, Physics, Chemistry, Biology, Science, Social Studies, Hindi, English but also for extracurricular activities and sports.\"\r\n                    />\r\n                </Helmet>\r\n                :\r\n                <Helmet>\r\n                    <title>Teach students near you and online | Delta Educators</title>\r\n                    <meta\r\n                        name=\"description\"\r\n                        content=\"Find students near you to teach. We at Delta Educators require tutors not only for subjects like Mathematics, Economics, Physics, Chemistry, Biology, Science, Social Studies, Hindi, English but also for extra extracurricular and sports.\"\r\n                    />\r\n                </Helmet>\r\n                }\r\n                <div className={styles.connectPage} >\r\n                    <h2>Connect</h2>\r\n                    \r\n                    <div className={styles.container}>\r\n                        {!isLoading?\r\n                            (   \r\n                                profiles.length>0?\r\n                                <div className={styles.cardHolder}>\r\n                                    {profiles.map((profile,i)=>(\r\n                                        <UserCard profile={profile} key={i} index={i}/>\r\n                                    ))}  \r\n                                </div>\r\n                                :\r\n                                <div className={styles.notFoundMsgHolder}>\r\n                                    <div className={styles.notFoundMsg}>No Profiles matching your requirements found.</div>\r\n                                </div>\r\n                            )\r\n                            :\r\n                            (\r\n                                <div className={styles.cardHolder}></div>\r\n                            )\r\n                        }\r\n                        <div className={isFilterMenuOpen?`${styles.filterHolder} ${styles.showFilters}`:`${styles.filterHolder}  ${styles.hideFilters}` }>\r\n                            <div className={styles.filterTopBar}><span className={styles.emptySpan}></span><span className={styles.filterHeading}><FontAwesomeIcon icon={faFilter}/>Filter</span><span className={styles.crossSign} onClick={hideFilterMenu}><FontAwesomeIcon icon={faPlus}/></span></div>\r\n                            <div className={styles.filterSection}>\r\n                            { user.accountType==='student'&&\r\n                                <>\r\n                                    <div className={styles.filterSecHead}>Filter by fees</div>\r\n                                    <div className={styles.inputHolder}>\r\n                                        <div><input type=\"radio\" name=\"feesType\" value='allfees' id='allfees' checked={feeModeFilter==='allfees'} onChange={changeFeeModeFilter}/><label htmlFor='allfees'>All</label></div>\r\n                                        <div><input type=\"radio\" name=\"feesType\" value='hourly' id='hourly' checked={feeModeFilter==='hourly'} onChange={changeFeeModeFilter}/><label htmlFor='hourly'>Hourly fees</label></div>\r\n                                        <div><input type=\"radio\" name=\"feesType\" value='daily' id='daily' checked={feeModeFilter==='daily'} onChange={changeFeeModeFilter}/><label htmlFor='daily'>Daily fees</label></div>\r\n                                        <div><input type=\"radio\" name=\"feesType\" value='monthly' id='monthly' checked={feeModeFilter==='monthly'} onChange={changeFeeModeFilter}/><label htmlFor='monthly'>Monthly fees</label></div>\r\n                                        <div className={styles.feeRangeHolder}>\r\n                                            <div className={styles.minfeesHolder}>\r\n                                                <input type='number' name='minFees'placeholder='Minimum' onChange={changeMinimumFees}/>\r\n                                                </div>\r\n                                            <div>To</div>\r\n                                            <div className={styles.maxfeesHolder}>\r\n                                                <input type='number' name='maxFees' placeholder='Maximum' onChange={changeMaximumFees}/>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </>\r\n                            }\r\n                                \r\n                            </div>\r\n                            <div className={styles.filterSection}>\r\n                                <div className={styles.filterSecHead}>Filter by subject</div>\r\n                                <div className={styles.dropDownHolder}>\r\n                                    <Select\r\n                                        multi\r\n                                        options={subjects}\r\n                                        onChange={onSubjectChange}\r\n                                        color=\"#2876A0\"\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className={styles.filterSection}>\r\n                                <div className={styles.filterSecHead}>Filter by location</div>\r\n                                <div className={styles.pincodeInputHolder}>\r\n                                    <input \r\n                                    type='number' \r\n                                    name='pincode' \r\n                                    id='pincode' \r\n                                    placeholder='Pincode'\r\n                                    value={pincode || \"\"}\r\n                                    onChange={pincodeChangeHandler}\r\n                                    />\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {(hasMore&&!isLoading)&&\r\n                        <div className={styles.loadMoreBtn} onClick={changePageNumber}>\r\n                            <div >Load More</div>\r\n                        </div>\r\n                    } \r\n                    {(isLoading)&&\r\n                        <div className={styles.loadMoreBtn}>\r\n                            <div >Loading...</div>\r\n                        </div>\r\n                    } \r\n                    <div className={styles.filterBar} onClick={showFilterMenu}><FontAwesomeIcon  icon={faFilter}/>Filter</div>\r\n                </div>\r\n            </React.Fragment>\r\n            \r\n        );\r\n    }else{\r\n        return (\r\n        <div className={styles.connectPage} >\r\n            <Loader/>\r\n        </div>)\r\n    }\r\n};\r\nexport default ConnectPage;","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\tutorFeeDetailForm\\tutorFeeDetailForm.js",["224"],"import React,{useState,useContext} from \"react\";\r\nimport {Redirect} from 'react-router-dom'\r\nimport { userContext } from \"../../context/userContext\";\r\nimport axios from 'axios'\r\nimport useForm from '../../hooks/useForm'\r\nimport validationRules from '../../validationRules/tutorFeeDetailFormValidationRules'\r\nimport {motion} from 'framer-motion';\r\nimport 'aos/dist/aos.css'\r\nimport styles from '../AuthForm/authForm.module.scss'\r\n\r\nconst TutorFeeDetailForm=({formType, setFormType,backUrl})=> {\r\n    const [isSubmited,setIsSubmited]=useState(false);\r\n    const [feeDuration,setFeeDuration]=useState('monthly');\r\n    const {setUser,setAlertMsg,userLoaded,user,setBannerMsg} = useContext(userContext);\r\n    const [isLoading,setIsLoading]=useState(false);\r\n\r\n    const changeFeeDuration=(e)=>{\r\n        setFeeDuration(e.target.value);\r\n    }\r\n    const submitHandler =async () => {\r\n        const data = {\r\n            _id:user._id,\r\n            feesPeriod:feeDuration,\r\n            feeAmount: values.feeAmount,\r\n            accountNumber:values.accountNumber,\r\n            ifscCode:values.ifscCode,\r\n            accountHolder:values.accountHolder,\r\n            isStepTwoDone:true,\r\n            isActive:true\r\n        };\r\n        try{\r\n            setIsLoading(true);\r\n            const res = await axios.put(`${process.env.REACT_APP_API_URL}/teachers/update`,data,{headers:{'x-auth-token':localStorage.getItem(\"token\")}});\r\n            if(!res.data.error){\r\n                setUser(res.data.result);\r\n                setIsSubmited(true);\r\n            }\r\n            else {\r\n                setAlertMsg({message:res.data.error});\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err);\r\n            setBannerMsg({message:`Something went wrong!`});\r\n        } \r\n        setIsLoading(false);\r\n    };\r\n    const { values, errors, handleChange, handleSubmit} = useForm(\r\n        submitHandler,\r\n        validationRules\r\n    );\r\n    if(isSubmited&&!isLoading){\r\n        return(<Redirect to={backUrl||'/'}/>)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n        \r\n                <motion.form initial={{opacity:0,x:-300}} animate={{opacity:1,x:0}} onSubmit={handleSubmit} autoComplete=\"off\">\r\n                    <h3>Fees Details</h3>\r\n                    <div className={styles.inputContainer}>\r\n                {/* ============================Fee Duration Radio============================= */}\r\n                    <div className={styles.radioLabelHolder}><label htmlFor='feeDuration'>When would you like to collect the fees? </label></div>\r\n                        <div className={styles.radioBtnHolder}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"feeDuration\"\r\n                                id=\"hourly\"\r\n                                value=\"hourly\"\r\n                                checked={feeDuration==='hourly'}\r\n                                onChange={changeFeeDuration}\r\n                            />\r\n                            <label htmlFor='hourly'>Hourly</label>\r\n                        </div>\r\n                        <div className={styles.radioBtnHolder}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"feeDuration\"\r\n                                id=\"daily\"\r\n                                value=\"daily\"\r\n                                checked={feeDuration==='daily'}\r\n                                onChange={changeFeeDuration}\r\n                            />\r\n                            <label htmlFor='daily'>Daily</label>\r\n                        </div>\r\n                        <div className={styles.radioBtnHolder}>\r\n                            <input\r\n                                type=\"radio\"\r\n                                name=\"feeDuration\"\r\n                                id=\"monthly\"\r\n                                value=\"monthly\"\r\n                                checked={feeDuration==='monthly'}\r\n                                onChange={changeFeeDuration}\r\n                            />\r\n                            <label htmlFor='monthly'>Monthly</label>\r\n                        </div>\r\n                {/* ===================================Fee Amount Textbox========================= */}\r\n                        <div className={styles.inputHolder}>\r\n                            <label htmlFor='feeAmount'>{feeDuration} Fee Amount (INR)</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className={`${errors.feeAmount? styles.validationError:styles.inputBox}`}\r\n                                name=\"feeAmount\"\r\n                                id=\"feeAmount\"\r\n                                placeholder=\"\"\r\n                                value={values.feeAmount || \"\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className={styles.errorMsg}>{errors.feeAmount}</div>\r\n                        </div>\r\n\r\n                {/* ===================================Account No. Textbox============================ */}\r\n                        <div className={styles.inputHolder}>\r\n                            <label htmlFor='accountNumber'>Your Account Number</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className={`${errors.accountNumber? styles.validationError:styles.inputBox}`}\r\n                                name=\"accountNumber\"\r\n                                id=\"accountNumber\"\r\n                                placeholder=\"\"\r\n                                value={values.accountNumber || \"\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className={styles.errorMsg}>{errors.accountNumber}</div>\r\n                        </div>\r\n                {/* ====================================Confirm Account textbox=========================== */}\r\n                        <div className={styles.inputHolder}>\r\n                            <label htmlFor='confirmAccountNumber'>Confirm Account Number</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                className={`${errors.confirmAccountNumber? styles.validationError:styles.inputBox}`}\r\n                                name=\"confirmAccountNumber\"\r\n                                id=\"confirmAccountNumber\"\r\n                                placeholder=\"\"\r\n                                value={values.confirmAccountNumber || \"\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className={styles.errorMsg}>{errors.confirmAccountNumber}</div>\r\n                        </div>\r\n                {/* =====================================Ifsc textbox====================================== */}\r\n                        <div className={styles.inputHolder}>\r\n                            <label htmlFor='ifscCode'>IFSC code</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={`${errors.ifscCode? styles.validationError:styles.inputBox}`}\r\n                                name=\"ifscCode\"\r\n                                id=\"ifscCode\"\r\n                                placeholder=\"\"\r\n                                value={values.ifscCode || \"\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className={styles.errorMsg}>{errors.ifscCode}</div>\r\n                        </div>\r\n                {/* ===================================Account Holder Name=================================== */}\r\n                        <div className={styles.inputHolder}>\r\n                            <label htmlFor='accountHolder'>Account Holder's Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className={`${errors.accountHolder? styles.validationError:styles.inputBox}`}\r\n                                name=\"accountHolder\"\r\n                                id=\"accountHolder\"\r\n                                placeholder=\"\"\r\n                                value={values.accountHolder || \"\"}\r\n                                onChange={handleChange}\r\n                            />\r\n                            <div className={styles.errorMsg}>{errors.accountHolder}</div>\r\n                        </div>\r\n                \r\n                        <div className={styles.inputHolder}>\r\n                                <input\r\n                                    type=\"submit\"\r\n                                    value={isLoading?`Loading...`:`Proceed`}\r\n                                    disabled={isLoading}\r\n                                />\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </motion.form>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default TutorFeeDetailForm;\r\n","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\UserCard\\userCard.js",["225","226"],"import React,{useEffect,useContext, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport styles from './userCard.module.scss';\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css'\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMapMarkerAlt, faRupeeSign } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport {userContext} from '../../context/userContext';\r\nconst UserCard=({profile}) => {\r\n    const {user,setUser,setAlertMsg}=useContext(userContext);\r\n    const [connectionSuccess,setConnectionSuccess]=useState(false);\r\n    const [targetUserId,setTargetUserId]=useState();\r\n    const history=useHistory();\r\n\r\n\r\n    useEffect(()=>{\r\n        if(connectionSuccess&&targetUserId){\r\n            console.log(targetUserId);\r\n            history.push({\r\n                pathname:`profile/${targetUserId}`\r\n            })\r\n        }\r\n    },[connectionSuccess,targetUserId]);\r\n\r\n    useEffect(()=>{\r\n        Aos.init({duration:2000})\r\n    },[])\r\n\r\n    const handleConnect=async (profileId)=>{\r\n        setTargetUserId(profileId);\r\n        let idMatch=user.connections.some((connection)=>{\r\n            return connection===profileId\r\n        })\r\n        if(idMatch){\r\n            setAlertMsg({message:'You are already connected to this user'});\r\n            setConnectionSuccess(true);\r\n        }else{\r\n            let confirmation=window.confirm('Do you want to use 1 credit to connect?')\r\n            if(confirmation){\r\n                const config = {\r\n                    headers: {\r\n                        'x-auth-token':localStorage.getItem(\"token\")\r\n                    }\r\n                };\r\n                let res=await axios.post(`${process.env.REACT_APP_API_URL}/connects/redeem`,{targetUserId:profileId},config);\r\n                if(res.data.error){\r\n                    setAlertMsg({message:res.data.error})\r\n                }else{\r\n                    setConnectionSuccess(true);\r\n                    if(user.connectsLeft!=='Unlimted'){\r\n                        setUser({...user,connectsLeft:user.connectsLeft-1,connections:[...user.connections,profileId]});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }      \r\n\r\n    return (\r\n    <React.Fragment>\r\n        <div className={styles.card} data-aos='zoom-in'>\r\n            {profile.classGroups&&\r\n                <div  className={styles.classesHolder}>\r\n                    {\r\n                        profile.classGroups.map(classGroup=>(\r\n                            <div>{classGroup}</div>\r\n                        ))\r\n                    }\r\n                    \r\n                </div>\r\n            }\r\n            <div className={styles.profilePicHolder}><img src={`http://localhost:2700/uploads/profilePictures/${profile.profilePicture}`}/></div>\r\n            <div className={styles.profileName}>{profile.name.split(' ')[0]} {profile.name.split(' ')[1]}</div>\r\n            <div className={styles.profileLocation}><FontAwesomeIcon icon={faMapMarkerAlt}/>{profile.district||''}</div>\r\n            <div className={styles.skillsSection}>\r\n                {profile.subjects.map((skill,j)=>(\r\n                    <div key={j} className={styles.profileSkill}>{skill}</div>\r\n                ))}\r\n            </div>\r\n            {\r\n                user?<div className={styles.hireBtn} onClick={()=>handleConnect(profile._id)}>Connect</div>\r\n                :\r\n                <Link className={styles.hireBtn} \r\n                    to={\r\n                        {\r\n                            pathname:`/auth`,\r\n                            state:{\r\n                                formType:'studentLogin'\r\n                            }\r\n                        }\r\n                    }\r\n                >Connect</Link>\r\n            }\r\n            <div className={styles.locationsSection}>\r\n                {profile.teachingLocation&&\r\n                    profile.teachingLocation.map((location,j)=>(\r\n                    <div key={j} className={styles.location}><FontAwesomeIcon icon={faMapMarkerAlt}/>{location}</div>\r\n                ))}\r\n            </div>\r\n            {profile.classOfStudy&&\r\n                <div className={styles.classesHolder}>\r\n                   <div>{ profile.classOfStudy}</div>\r\n                </div>\r\n            }\r\n            \r\n            {profile.feeAmount&&\r\n                <div className={styles.feesAmountHolder}>\r\n                    <div><FontAwesomeIcon icon={faRupeeSign}/>{profile.feeAmount}/{profile.feesPeriod==='monthly'?'Month':profile.feesPeriod==='daily'?'Day':'Hour'}</div>\r\n                </div>\r\n            }\r\n            \r\n        </div>\r\n    </React.Fragment>\r\n    \r\n    );\r\n};\r\nexport default UserCard;","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TopTutors\\topTutors.js",["227","228"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorRegistrationForm\\tutorRegistrationForm.js",["229","230","231"],"import React, { useEffect, useState,useContext } from 'react';\r\nimport { userContext } from \"../../context/userContext\";\r\nimport axios from 'axios';\r\nimport Loader from '../Loader/loader'\r\nimport useForm from '../../hooks/useForm';\r\nimport validationRules from '../../validationRules/registerationFormValidationRules';\r\nimport {motion} from 'framer-motion';\r\nimport styles from '../AuthForm/authForm.module.scss';\r\n\r\nconst TutorRegistrationForm= ({formType, setFormType})=> {\r\n    const [registerationSuccess,setRegisterationSuccess]=useState(false);\r\n    const[tncAgreed,setTncAgreed]=useState(false);\r\n    const[tncValidatonErr,setTncValidationErr]=useState(null);\r\n    const [isLoading,setIsLoading]=useState(false);\r\n    const {setUser,setAlertMsg,userLoaded,setBannerMsg } = useContext(userContext);\r\n    const[localErrors,setLocalErrors]=useState({});\r\n    const [profilePic,setProfilePic]=useState();\r\n\r\n    useEffect(()=>{\r\n        if(userLoaded){\r\n          localStorage.removeItem('token');\r\n          setUser(null);\r\n        }\r\n    },[userLoaded]);\r\n\r\n    useEffect(()=>{\r\n        if(registerationSuccess){\r\n            setFormType('tutorVerifyEmailForm')\r\n        }\r\n    },[registerationSuccess])\r\n\r\n    const profilePicChangeHandler=(e)=>{\r\n        setProfilePic(e.target.files[0])\r\n        if(e.target.files.length===0){\r\n            setLocalErrors({profilePicture:'Profile picture is required'});\r\n        }else{\r\n            setLocalErrors({profilePicture:''});\r\n        }\r\n    }\r\n\r\n    const registerationHandler =async () => {\r\n        if(tncAgreed&&profilePic){\r\n            setIsLoading(true);\r\n            setTncValidationErr(null);\r\n            const formData=new FormData();\r\n            formData.append('name',values.fullName);\r\n            formData.append('email',values.email);\r\n            formData.append('contactNumber',values.contactNumber);\r\n            formData.append('password',values.password);\r\n            formData.append('profilePicture',profilePic);\r\n            \r\n            try{\r\n                const config = {\r\n                    headers: {\r\n                        'content-type': 'multipart/form-data'\r\n                    }\r\n                };\r\n                const res = await axios.post(`${process.env.REACT_APP_API_URL}/teachers/register`,formData,config);\r\n                if(!res.data.error){\r\n                    localStorage.setItem(\"token\", res.data.result.token);\r\n                    setUser(res.data.result.user);\r\n                    setRegisterationSuccess(true);\r\n                }\r\n                else {\r\n                    localStorage.removeItem(\"token\");\r\n                    setUser(null);\r\n                    setAlertMsg({message:res.data.error});\r\n                }\r\n            }\r\n            catch(err){\r\n                console.log(err);\r\n                setBannerMsg({message:`Something went wrong!`});\r\n            } \r\n            setIsLoading(false) \r\n        }\r\n        else if(!tncAgreed){\r\n            setTncValidationErr('Agree to terms and conditions to proceed');\r\n        }\r\n        else if(!profilePic){\r\n            setLocalErrors({profilePicture:'Profile picture is required'});\r\n        }\r\n      };\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n        registerationHandler,\r\n        validationRules\r\n    );\r\n    return (\r\n\r\n      <React.Fragment>\r\n        <motion.form initial={{opacity:0,x:-300}} animate={{opacity:1,x:0}} onSubmit={handleSubmit}>\r\n            <h3>Tutor Registration</h3>\r\n            <div className={styles.inputContainer}>\r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='full-name'>Name*</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`${errors.fullName? styles.validationError:styles.inputBox}`}\r\n                        name=\"fullName\"\r\n                        id=\"full-name\"\r\n                        placeholder=\"\"\r\n                        autoFocus\r\n                        value={values.fullName || \"\"}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className={styles.errorMsg}>{errors.fullName}</div>\r\n                </div>\r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='email'>Email*</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className={`${errors.email? styles.validationError:styles.inputBox}`}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"\"\r\n                        value={values.email || \"\"}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className={styles.errorMsg}>{errors.email}</div>\r\n                </div>\r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='contact'>Contact Number*</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className={`${errors.contactNumber? styles.validationError:styles.inputBox}`}\r\n                            name=\"contactNumber\"\r\n                            id=\"contact\"\r\n                            placeholder=\"\"\r\n                            value={values.contactNumber || \"\"}\r\n                            onChange={handleChange}\r\n                        />\r\n                    <div className={styles.errorMsg}>{errors.contactNumber}</div>\r\n                </div>\r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='password'>Password*</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={`${errors.password? styles.validationError:styles.inputBox}`}\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"\"\r\n                            value={values.password || \"\"}\r\n                            onChange={handleChange}\r\n                        />\r\n                    <div className={styles.errorMsg}>{errors.password}</div>\r\n                </div>\r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='confirm-password'>Confirm Password*</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className={`${errors.confirmPassword? styles.validationError:styles.inputBox}`}\r\n                            name=\"confirmPassword\"\r\n                            id=\"confirm-password\"\r\n                            placeholder=\"\"\r\n                            value={values.confirmPassword || \"\"}\r\n                            onChange={handleChange}\r\n                        />\r\n                    <div className={styles.errorMsg}>{errors.confirmPassword}</div>\r\n                </div>\r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='profilePicture'>Profile Picture*</label>\r\n                        <input\r\n                            type=\"file\"\r\n                            className={`${styles.inputBox}`}\r\n                            name=\"profilePicture\"\r\n                            id=\"profilePicture\"\r\n                            onChange={profilePicChangeHandler}\r\n                            accept=\"image/*\"\r\n                        />\r\n                        <div className={styles.errorMsg}>{localErrors.profilePicture}</div>\r\n                </div>\r\n                <div className={styles.checkboxHolder}>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"userTerms\"\r\n                            id=\"user-terms\"\r\n                            checked={tncAgreed}\r\n                            onChange={()=>{\r\n                                !tncAgreed&&setTncValidationErr(null)\r\n                                setTncAgreed(prev=>!prev)\r\n                            }}\r\n                        />\r\n                    <label htmlFor='user-terms'>I agree to <span>terms and conditions</span></label>\r\n                </div>\r\n                <div className={styles.errorMsg}>{tncValidatonErr}</div>\r\n                <div className={styles.inputHolder}>\r\n                        <input\r\n                            type=\"submit\"\r\n                            className={`${styles.inputBox}`}\r\n                            value={isLoading?`Loading...`:`Register`}\r\n                            disabled={isLoading}\r\n                        />\r\n                </div>\r\n                <p>Already registered? \r\n                    <span onClick={()=>{setFormType('tutorLogin')}}>Login</span>\r\n                </p>\r\n            </div>\r\n        </motion.form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default TutorRegistrationForm;\r\n",["232","233"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\ProfilePage\\ProfilePage.js",["234","235","236"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\AuthForm\\authForm.js",["237"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\SearchTutorSection\\searchTutorSection.js",["238"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\registerationFormValidationRules.js",["239"],"export default (values,touched)=> {\r\n    let errors = {};\r\n    if(touched.fullName){\r\n      if (!values.fullName) {\r\n        errors.fullName = 'name is required';\r\n      } else if (!/^([a-z']+( )?)+$/i.test(values.fullName)) {\r\n        errors.fullName = 'Name can only contain alphabets and space';\r\n      }\r\n    }\r\n    if(touched.email){\r\n      if (!values.email && touched.email) {\r\n        errors.email = 'Email address is required';\r\n      } else if (!/\\S+@\\S+\\.\\S+/i.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n      }\r\n    }\r\n    if(touched.contactNumber){\r\n      if (!values.contactNumber) {\r\n        errors.contactNumber = 'contact number is required';\r\n      } else if (!/^[1-9]\\d{9}$/.test(values.contactNumber)) {\r\n        errors.contactNumber = 'contact number is invalid';\r\n      }\r\n    }\r\n    if(touched.password){\r\n      if (!values.password) {\r\n        errors.password = 'Password is required';\r\n      } else if (values.password.length < 8) {\r\n        errors.password = 'Password must be 8 or more characters';\r\n      }\r\n    }\r\n    if(touched.confirmPassword){\r\n      if (!values.confirmPassword) {\r\n        errors.confirmPassword = 'kindly confirm your password';\r\n      }\r\n       else if (values.confirmPassword!==values.password) {\r\n        errors.confirmPassword = 'Passwords didnt match';\r\n      }\r\n    }\r\n    \r\n    return errors;\r\n  };\r\n  ","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\SubjectsCarousel\\subjectsCarousel.js",["240","241","242"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\loginFormValidationsRules.js",["243"],"export default (values,touched)=> {\r\n    let errors = {};\r\n    if(touched.email){\r\n      if (!values.email) {\r\n        errors.email = 'Email address is required';\r\n      } else if (!/\\S+@\\S+\\.\\S+/i.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n      }\r\n    }\r\n    if ( touched.password&&!values.password) {\r\n      errors.password = 'Password is required';\r\n    }\r\n    return errors;\r\n  };","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorLoginForm\\tutorLoginForm.js",["244"],"import React, {useState,useContext,useEffect } from 'react';\r\nimport {Redirect} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport {userContext} from '../../context/userContext'\r\nimport useForm from '../../hooks/useForm';\r\nimport validationRules from '../../validationRules/loginFormValidationsRules';\r\nimport {motion} from 'framer-motion';\r\nimport styles from '../AuthForm/authForm.module.scss';\r\n\r\nconst TutorLoginForm= ({formType, setFormType,backUrl})=> {\r\n\r\n    const [loginSuccess,setLoginSuccess]=useState(false);\r\n    const [isLoading,setIsLoading]=useState(false);\r\n    const {setUser,setAlertMsg,userLoaded,setBannerMsg,user } = useContext(userContext);\r\n    useEffect(()=>{\r\n        if(userLoaded){\r\n          localStorage.removeItem('token');\r\n          setUser(null);\r\n        }\r\n        \r\n    },[userLoaded]);\r\n\r\n    useEffect(()=>{\r\n        if(user){\r\n            if(!user.isVerified){\r\n                setAlertMsg({message:'Verify your email to proceed'})\r\n                setFormType('tutorVerifyEmailForm')\r\n            }\r\n            else if(!user.isStepOneDone){\r\n                setAlertMsg({message:'Complete registration to proceed'})\r\n                setFormType('tutorInfoForm')\r\n            }\r\n            else if(!user.isStepTwoDone){\r\n                setAlertMsg({message:'Complete registration to proceed'})\r\n                setFormType('tutorFeeDetailForm');\r\n            }\r\n            else{\r\n                setLoginSuccess(true)\r\n            }\r\n        }\r\n    },[user,setFormType,setAlertMsg])\r\n\r\n    const loginHandler = async () => {\r\n        const data = {\r\n          email: values.email,\r\n          password: values.password\r\n        };\r\n        try{\r\n            setIsLoading(true)\r\n            let res= await axios.post(`${process.env.REACT_APP_API_URL}/teachers/login`, data)\r\n            if (!res.data.error) {\r\n                localStorage.setItem(\"token\", res.data.result.token);\r\n                setBannerMsg({message:`Welcome back ${res.data.result.user.name}`})\r\n                setIsLoading(false);\r\n                setUser(res.data.result.user);\r\n            } \r\n            else {\r\n                localStorage.removeItem(\"token\");\r\n                setUser(null);\r\n                setAlertMsg({message:res.data.error});\r\n                setIsLoading(false);\r\n            }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            setBannerMsg({message:`Something went wrong!`});\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n    const { values, errors, handleChange, handleSubmit } = useForm(\r\n    loginHandler,\r\n    validationRules\r\n    );\r\n    if(loginSuccess&&!isLoading){   \r\n        return (<Redirect to={backUrl||'/'}/>)\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <motion.form initial={{opacity:0,x:-300}} animate={{opacity:1,x:0}} onSubmit={handleSubmit}>\r\n            <h3>Tutor Login</h3>\r\n            <div className={styles.inputContainer}>\r\n                \r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='email'>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className={`${errors.email? styles.validationError:styles.inputBox}`}\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"\"\r\n                        value={values.email || \"\"}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className={styles.errorMsg}>{errors.email}</div>\r\n                </div>\r\n                \r\n                <div className={styles.inputHolder}>\r\n                    <label htmlFor='password'>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className={`${errors.password? styles.validationError:styles.inputBox}`}\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"\"\r\n                        value={values.password || \"\"}\r\n                        onChange={handleChange}\r\n                    />\r\n                    <div className={styles.errorMsg}>{errors.password}</div>\r\n                </div>\r\n                \r\n                <div className={styles.inputHolder}>\r\n                        <input\r\n                            type=\"submit\"\r\n                            className={`${styles.inputBox}`}\r\n                            value={isLoading?`Loading...`:`Login`}\r\n                            disabled={isLoading}\r\n\r\n                        />\r\n                </div>\r\n                <p>New here? \r\n                    <span onClick={()=>{setFormType('tutorRegistration')}}>Register</span>\r\n                </p>\r\n            </div>\r\n        </motion.form>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default TutorLoginForm;\r\n","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\HomePage\\homePage.js",[],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\RegisterSection\\registerSection.js",["245","246","247"],"import React,{useEffect,useContext} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Aos from 'aos';\r\nimport 'aos/dist/aos.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport styles from './registerSection.module.scss';\r\nimport {userContext} from '../../context/userContext'\r\n\r\nexport default () => {\r\n  useEffect(()=>{\r\n    Aos.init({duration:2000})\r\n  },[])\r\n  const {user}=useContext(userContext)\r\n  return (\r\n    <React.Fragment>\r\n      {!user&&\r\n        <div id=\"signinSection\" className={styles.signinSection}>\r\n              <div className={styles.studentSection}>\r\n                  <div className={styles.content}>\r\n                      <h2 className={styles.studentSecHead} data-aos='zoom-in'>Hire a tutor</h2>\r\n                      <div className={styles.studentRegisterBtn}>\r\n                          <Link data-aos='fade-up' to={\r\n                            {\r\n                              pathname:'/auth',\r\n                              state:{\r\n                              formType:'studentRegistration'\r\n                              }\r\n                            }\r\n                          }>\r\n                              Register \r\n                          </Link>\r\n                      </div>\r\n                      <div className={styles.alreadyRegisteredText} data-aos='fade-up'>Already Registered? <span>\r\n                        <Link data-aos='fade-up' to={\r\n                            {\r\n                              pathname:'/auth',\r\n                              state:{\r\n                                formType:'studentLogin'\r\n                              }\r\n                            }\r\n                        }>\r\n                            Login\r\n                        </Link>\r\n                      </span></div>\r\n                  </div>\r\n              </div>\r\n              <div className={styles.tutorSection}>\r\n                  <div className={styles.content}>\r\n                      <h2 className={styles.tutorSecHead} data-aos='zoom-in'>Become a tutor</h2>\r\n                      <div className={styles.tutorRegisterBtn}>\r\n                      <Link data-aos='fade-up' to={\r\n                        {\r\n                          pathname:'/auth',\r\n                          state:{\r\n                            formType:'tutorRegistration'\r\n                          }\r\n                        }\r\n                      }>\r\n                          Register \r\n                      </Link>\r\n                      </div>\r\n                      <div className={styles.alreadyRegisteredText}  data-aos='fade-up'>Already Registered? <span>\r\n                        <Link data-aos='fade-up' to={\r\n                          {\r\n                            pathname:'/auth',\r\n                            state:{\r\n                              formType:'tutorLogin'\r\n                            }\r\n                          }\r\n                        }>\r\n                          Login\r\n                        </Link>\r\n                      </span></div>\r\n                  </div>\r\n              </div>\r\n        </div>\r\n      }\r\n    </React.Fragment>\r\n    \r\n  );\r\n};\r\n","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\index.js",[],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\PaymentSuccessPage\\paymentSuccessPage.js",["248"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Footer\\footer.js",["249","250"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\MsgBanner\\msgBanner.js",["251"],"import React,{useContext, useEffect,useState} from 'react';\r\nimport styles from './msgBanner.module.scss'\r\nimport {userContext} from \"../../context/userContext\"\r\nimport {motion} from 'framer-motion';\r\nconst MsgBanner=()=>{\r\n    const [isDisconnected,setIsDisconnected]=useState(false)\r\n    const {bannerMsg,setBannerMsg}=useContext(userContext);\r\n\r\n    useEffect(()=>{\r\n        window.addEventListener('online', handleConnectionChange);\r\n        window.addEventListener('offline', handleConnectionChange);\r\n\r\n        return ()=>{\r\n            window.removeEventListener('online', handleConnectionChange);\r\n            window.removeEventListener('offline', handleConnectionChange);\r\n        }\r\n\r\n    },[]);\r\n    useEffect(()=>{\r\n        if(isDisconnected){\r\n            setBannerMsg({message:'No internet Connection.',timmer:1})\r\n        }\r\n        else{\r\n            setBannerMsg();\r\n        }\r\n    },[isDisconnected]);\r\n    const handleConnectionChange = () => {\r\n        const condition = navigator.onLine ? 'online' : 'offline';\r\n        if (condition === 'online') {\r\n          const webPing = setInterval(\r\n            () => {\r\n              fetch('//google.com', {\r\n                mode: 'no-cors',\r\n                })\r\n              .then(() => {\r\n                setIsDisconnected(false);\r\n                return clearInterval(webPing)\r\n              })\r\n              .catch(\r\n                  setIsDisconnected(true)\r\n              )\r\n            }, 2000);\r\n          return;\r\n        }\r\n  \r\n        return setIsDisconnected(true);\r\n    }\r\n\r\n    return(\r\n        <>\r\n        {\r\n            bannerMsg&&\r\n            <motion.div  initial={{opacity:0,y:200}} animate={{opacity:1,y:0}} className={styles.msgBanner}>\r\n                <div className={styles.message}>\r\n                    {bannerMsg.message}\r\n                </div>\r\n            </motion.div>\r\n        }\r\n        </>\r\n        \r\n    )\r\n}\r\nexport default MsgBanner;","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\context\\userContext.js",["252"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentRegistrationForm\\studentRegistrationForm.js",["253","254","255","256"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\Slidder\\slidder.js",["257","258","259"],"import React,{useContext} from \"react\";\r\nimport {motion} from 'framer-motion'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleDown } from '@fortawesome/free-solid-svg-icons';\r\nimport {Link} from 'react-scroll';\r\nimport styles from './slidder.module.scss';\r\nimport sliderImg from '../../resources/images/teacher-bg-2.jpg';\r\nimport mobileBg from '../../resources/images/mobile-bg.jpg';\r\nimport {userContext }from '../../context/userContext'\r\n\r\nexport default () => {\r\n  const {user}=useContext(userContext)\r\n  return (\r\n    <React.Fragment>\r\n      \r\n      <div className={styles.sliderContainer}>\r\n          <img className={styles.background} src={sliderImg}/>\r\n          <img className={styles.mobileBackground} src={mobileBg}/>\r\n          <div className={styles.sliderContent}>\r\n            <motion.h1 className={styles.tagline} initial={{opacity:0,x:-50}} animate={{opacity:1, x:0}} transition={{duration:1}}>We Teach Everything</motion.h1>\r\n            {/* <motion.h3 className={styles.leadText}  initial={{opacity:0}} animate={{opacity:1}} transition={{duration:2}}>With a new and unique way to find a tutor</motion.h3> */}\r\n            <div className={styles.downIcon}>\r\n                {!user&&\r\n                  <Link to=\"signinSection\" smooth={true} duration={1000}>\r\n                      <FontAwesomeIcon icon={faAngleDoubleDown} className={styles.arrow}/>\r\n                  </Link>\r\n                }\r\n            </div>\r\n          </div>\r\n      </div>\r\n    </React.Fragment>\r\n    \r\n  );\r\n};\r\n","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\TutorVerifyEmail\\tutorVerifyEmail.js",["260","261","262"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\otpValidationRules.js",["263"],"export default (values,touched)=> {\r\n    let errors = {};\r\n    if(touched.otp){\r\n      if (!values.otp) {\r\n        errors.otp = 'Please enter OTP';\r\n      } else if (values.otp.length!==6) {\r\n        errors.otp = 'OTP must be 6 digit long';\r\n      }\r\n    }\r\n    return errors;\r\n  };","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\StudentVerifyEmail\\studentVerifyEmail.js",["264","265","266"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\tutorFeeDetailFormValidationRules.js",["267"],"export default (values,touched)=> {\r\n    let errors = {};\r\n    \r\n    if(touched.feeAmount){\r\n      if (!values.feeAmount) {\r\n        errors.feeAmount= 'Fee Amount is required';\r\n      } \r\n    }\r\n    if(touched.accountNumber){\r\n      if (!values.accountNumber) {\r\n        errors.accountNumber= 'Account Number is required';\r\n      }  else if (!/^\\d{9,18}$/.test(values.accountNumber)) {\r\n        errors.accountNumber = 'Account Number is invalid';\r\n      }\r\n    }\r\n    if(touched.confirmAccountNumber){\r\n      if (!values.confirmAccountNumber) {\r\n        errors.confirmAccountNumber= 'Account Number is required';\r\n      }  \r\n      else if (values.confirmAccountNumber!==values.accountNumber){\r\n        errors.confirmAccountNumber = 'Account Numbers do not match';\r\n      }\r\n      else if (!/^\\d{9,18}$/.test(values.confirmAccountNumber)) {\r\n        errors.confirmAccountNumber = 'Account Number is invalid';\r\n      }\r\n      \r\n    }\r\n    if(touched.ifscCode){\r\n      if (!values.ifscCode) {\r\n        errors.ifscCode= 'IFSC code is required';\r\n      }  else if (!/^[A-Z]{4}0[A-Z0-9]{6}$/.test(values.ifscCode)) {\r\n        errors.ifscCode = 'IFSC code is invalid';\r\n      }\r\n    }\r\n    if(touched.accountHolder){\r\n      if (!values.accountHolder) {\r\n        errors.accountHolder = 'Account holder\\'s name is required';\r\n      } else if (!/^([a-z']+( )?)+$/i.test(values.accountHolder)) {\r\n        errors.accountHolder = 'Account holder\\'s name can only contain alphabets and space';\r\n      }\r\n    }\r\n    return errors;\r\n  };\r\n  ","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\ContactUsForm\\contactUsForm.js",["268"],"import React,{useEffect,useState,useContext} from 'react';\r\nimport {Helmet} from \"react-helmet\";\r\nimport axios from 'axios';\r\nimport { faEnvelope, faMapMarkedAlt, faPhone } from '@fortawesome/free-solid-svg-icons';\r\nimport {motion} from 'framer-motion'\r\nimport useForm from '../../hooks/useForm';\r\nimport validationRules from '../../validationRules/contactFormFormValidationsRules '\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {userContext} from '../../context/userContext';\r\nimport styles from './contactUsForm.module.scss'\r\n\r\nconst ContactUsForm=()=>{\r\n    const [isLoading,setIsLoading]=useState(false);\r\n    const {setBannerMsg}=useContext(userContext);\r\n    const submitHandler = async () => {\r\n        const data = {\r\n          email: values.email,\r\n          name: values.name,\r\n          contactNumber:values.contactNumber,\r\n          message:values.message\r\n        };\r\n        try{\r\n            setIsLoading(true)\r\n            let res= await axios.post(`${process.env.REACT_APP_API_URL}/messages`, data);\r\n            if(res.status===200){\r\n                console.log('Submited');\r\n                setBannerMsg({message:`Thanks for contacting us will reach you soon`});\r\n                clearAllValues();\r\n            } \r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            alert(err)\r\n            setBannerMsg({message:`Something went wrong!`});\r\n            setIsLoading(false);\r\n        }\r\n        finally{\r\n            setIsLoading(false);\r\n        }\r\n\r\n    };\r\n    const { values, errors, handleChange, handleSubmit,clearAllValues } = useForm(\r\n        submitHandler,\r\n        validationRules\r\n    );\r\n\r\n    return(\r\n        <>\r\n            <Helmet>\r\n                <title>Contact Us | Feedback | Delta Educators</title>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Contact us if you have any feedback for Delta Educators.\"\r\n                />\r\n            </Helmet>\r\n            <div className={styles.contactUsForm}>\r\n                <h2>Contact Us</h2>\r\n                <div className={styles.mainContainer}>\r\n                    <motion.div className={styles.infoSection} initial={{opacity:0,x:-100}} animate={{opacity:1,x:0}}>\r\n                        <div className={styles.infoHolder}>\r\n                            <div className={styles.singleInfoContainer}>\r\n                                <FontAwesomeIcon icon={faEnvelope}/>\r\n                                <div>\r\n                                    <div className={styles.infoHeader}>Email</div>\r\n                                    <div className={styles.info}><a href=\"mailto:support@deltaeducators.com\">support@deltaeducators.com</a></div>\r\n                                </div>      \r\n                            </div>\r\n\r\n                            <div className={styles.singleInfoContainer}>\r\n                                <FontAwesomeIcon icon={faPhone}/>\r\n                                <div>\r\n                                    <div className={styles.infoHeader}>Contact Number</div>\r\n                                    <div className={styles.info}><a href=\"tel:+918628855283\">+91-8628855283</a></div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className={styles.singleInfoContainer}>\r\n                                <FontAwesomeIcon icon={faMapMarkedAlt}/>\r\n                                <div>\r\n                                    <div className={styles.infoHeader}>Address</div>\r\n                                    <div className={styles.info}>Building Number 108, top floor, Kamla Nagar, Crusher, Dhalli, Shimla, Himachal Pradesh (171006) </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </motion.div>\r\n                    <motion.div className={styles.formHolder} initial={{opacity:0,x:100}} animate={{opacity:1,x:0}}>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <div className={styles.inputHolder}>\r\n                                    <label htmlFor='name'>Name</label>\r\n                                    <input \r\n                                        type='text' \r\n                                        id='name' \r\n                                        name='name'\r\n                                        className={`${errors.name&&styles.validationError}`} \r\n                                        value={values.name || \"\"}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <div className={styles.errorMsg}>{errors.name}</div>\r\n                            </div>\r\n                            <div className={styles.inputHolder}>\r\n                                    <label htmlFor='email'>Email</label>\r\n                                    <input \r\n                                        type='email' \r\n                                        id='email' \r\n                                        name='email' \r\n                                        className={`${errors.email&&styles.validationError}`}\r\n                                        value={values.email || \"\"}\r\n                                        onChange={handleChange}    \r\n                                    />\r\n                                    <div className={styles.errorMsg}>{errors.email}</div>\r\n                            </div>\r\n                            <div className={styles.inputHolder}>\r\n                                    <label htmlFor='contactNumber'>Contact Number</label>\r\n                                    <input \r\n                                        type='number' \r\n                                        id='contactNumber' \r\n                                        name='contactNumber' \r\n                                        className={`${errors.contactNumber&&styles.validationError}`}\r\n                                        value={values.contactNumber|| \"\"}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                    <div className={styles.errorMsg}>{errors.contactNumber}</div>\r\n                            </div>\r\n                            <div className={styles.inputHolder}>\r\n                                    <label htmlFor='message'>Your message</label>\r\n                                    <textarea \r\n                                        name='message' \r\n                                        rows='10' id='message'\r\n                                        className={`${errors.message&&styles.textAreaValidationError}`}\r\n                                        value={values.message || \"\"}\r\n                                        onChange={handleChange}    \r\n                                    ></textarea>\r\n                                    <div className={styles.errorMsg}>{errors.message}</div>\r\n                            </div>\r\n                            <div className={styles.inputHolder}>\r\n                                    <input \r\n                                        type='submit' \r\n                                        id='submit' \r\n                                        value={isLoading?`Loading...`:`submit`}\r\n                                        disabled={isLoading}    \r\n                                    />\r\n                            </div>\r\n                        </form>\r\n                    </motion.div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContactUsForm;","F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\componenets\\PageNotFoundErrorPage\\pageNotFoundErrorPage.js",[],["269","270"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\reviewFormValidationsRules.js",["271"],"export default (values,touched)=> {\r\n    let errors = {};\r\n    if(touched.reviewTitle){\r\n      if (!values.reviewTitle) {\r\n        errors.reviewTitle = 'Review title is required';\r\n      } else if (values.reviewTitle.length>50) {\r\n        errors.reviewTitle = 'Review title should be less than 50 letters';\r\n      }\r\n    }\r\n    if ( touched.reviewBody&&!values.reviewBody) {\r\n      errors.reviewBody = 'Review is required';\r\n    }\r\n    return errors;\r\n  };",["272","273"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\tutorInfoFormValidationRules.js",["274"],"export default (values,touched)=> {\r\n    let errors = {};\r\n    if(touched.aadhar){\r\n      if (!values.aadhar) {\r\n        errors.aadhar= 'Aadhar number is required';\r\n      }  else if (!/^[2-9]{1}[0-9]{11}$/.test(values.aadhar)) {\r\n        errors.aadhar = 'Aadhar number is invalid';\r\n      }\r\n    }\r\n    if(touched.pincode){\r\n      if (!values.pincode) {\r\n        errors.pincode= 'Pincode is required';\r\n      }  else if (!/^[1-8]{1}[0-9]{5}$/.test(values.pincode)) {\r\n        errors.pincode = 'Pincode is invalid';\r\n      }\r\n    }\r\n    if(touched.instituteName){\r\n      if (!values.instituteName) {\r\n        errors.instituteName = 'Intitute name is required';\r\n      } else if (!/^([a-z']+( )?)+$/i.test(values.instituteName)) {\r\n        errors.instituteName = 'Institute name can only contain alphabets and space';\r\n      }\r\n    }\r\n    if(touched.address){\r\n      if (!values.address) {\r\n        errors.address = 'Address is required';\r\n      } \r\n    }\r\n\r\n    return errors;\r\n  };\r\n  ",["275","276"],"F:\\Users\\Acer\\Desktop\\sigmastudy\\frontend\\src\\validationRules\\contactFormFormValidationsRules .js",["277"],"export default (values,touched)=> {\r\n    let errors = {};\r\n    if(touched.name){\r\n      if (!values.name) {\r\n        errors.name = 'Name is required';\r\n      } else if (!/^([a-z']+( )?)+$/i.test(values.name)) {\r\n        errors.name = 'Name can only contain alphabets and space';\r\n      }\r\n    }\r\n    if(touched.email){\r\n      if (!values.email && touched.email) {\r\n        errors.email = 'Email address is required';\r\n      } else if (!/\\S+@\\S+\\.\\S+/i.test(values.email)) {\r\n        errors.email = 'Email address is invalid';\r\n      }\r\n    }\r\n    if(touched.contactNumber){\r\n      if (!values.contactNumber) {\r\n        errors.contactNumber = 'Contact number is required';\r\n      } else if (!/^[1-9]\\d{9}$/.test(values.contactNumber)) {\r\n        errors.contactNumber = 'Contact number is invalid';\r\n      }\r\n    }\r\n    if(touched.message){\r\n      if (!values.message) {\r\n        errors.message = 'Message is required';\r\n      } \r\n    }\r\n    return errors;\r\n  };",{"ruleId":"278","replacedBy":"279"},{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":5,"column":1,"nodeType":"284","endLine":18,"endColumn":2},{"ruleId":"278","replacedBy":"285"},{"ruleId":"280","replacedBy":"286"},{"ruleId":"287","severity":1,"message":"288","line":9,"column":10,"nodeType":"289","messageId":"290","endLine":9,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":77,"column":7,"nodeType":"293","endLine":77,"endColumn":24,"suggestions":"294"},{"ruleId":"291","severity":1,"message":"295","line":159,"column":7,"nodeType":"293","endLine":159,"endColumn":13,"suggestions":"296"},{"ruleId":"287","severity":1,"message":"288","line":3,"column":37,"nodeType":"289","messageId":"290","endLine":3,"endColumn":45},{"ruleId":"287","severity":1,"message":"297","line":12,"column":36,"nodeType":"289","messageId":"290","endLine":12,"endColumn":46},{"ruleId":"287","severity":1,"message":"298","line":16,"column":9,"nodeType":"289","messageId":"290","endLine":16,"endColumn":16},{"ruleId":"291","severity":1,"message":"299","line":23,"column":5,"nodeType":"293","endLine":23,"endColumn":15,"suggestions":"300"},{"ruleId":"291","severity":1,"message":"301","line":73,"column":5,"nodeType":"293","endLine":73,"endColumn":19,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":130,"column":53,"nodeType":"305","endLine":130,"endColumn":70},{"ruleId":"278","replacedBy":"306"},{"ruleId":"280","replacedBy":"307"},{"ruleId":"282","severity":1,"message":"283","line":6,"column":1,"nodeType":"284","endLine":24,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":14,"column":40,"nodeType":"305","endLine":14,"endColumn":56},{"ruleId":"287","severity":1,"message":"298","line":15,"column":11,"nodeType":"289","messageId":"290","endLine":15,"endColumn":18},{"ruleId":"291","severity":1,"message":"308","line":22,"column":9,"nodeType":"293","endLine":22,"endColumn":21,"suggestions":"309"},{"ruleId":"278","replacedBy":"310"},{"ruleId":"280","replacedBy":"311"},{"ruleId":"287","severity":1,"message":"312","line":6,"column":10,"nodeType":"289","messageId":"290","endLine":6,"endColumn":21},{"ruleId":"287","severity":1,"message":"297","line":28,"column":32,"nodeType":"289","messageId":"290","endLine":28,"endColumn":42},{"ruleId":"287","severity":1,"message":"313","line":138,"column":11,"nodeType":"289","messageId":"290","endLine":138,"endColumn":41},{"ruleId":"287","severity":1,"message":"314","line":1,"column":15,"nodeType":"289","messageId":"290","endLine":1,"endColumn":24},{"ruleId":"287","severity":1,"message":"297","line":22,"column":32,"nodeType":"289","messageId":"290","endLine":22,"endColumn":42},{"ruleId":"287","severity":1,"message":"315","line":1,"column":46,"nodeType":"289","messageId":"290","endLine":1,"endColumn":52},{"ruleId":"287","severity":1,"message":"316","line":1,"column":54,"nodeType":"289","messageId":"290","endLine":1,"endColumn":65},{"ruleId":"287","severity":1,"message":"288","line":13,"column":10,"nodeType":"289","messageId":"290","endLine":13,"endColumn":18},{"ruleId":"287","severity":1,"message":"317","line":45,"column":11,"nodeType":"289","messageId":"290","endLine":45,"endColumn":30},{"ruleId":"287","severity":1,"message":"318","line":46,"column":12,"nodeType":"289","messageId":"290","endLine":46,"endColumn":31},{"ruleId":"291","severity":1,"message":"292","line":111,"column":7,"nodeType":"293","endLine":111,"endColumn":24,"suggestions":"319"},{"ruleId":"291","severity":1,"message":"320","line":171,"column":7,"nodeType":"293","endLine":171,"endColumn":18,"suggestions":"321"},{"ruleId":"287","severity":1,"message":"297","line":14,"column":32,"nodeType":"289","messageId":"290","endLine":14,"endColumn":42},{"ruleId":"291","severity":1,"message":"322","line":24,"column":7,"nodeType":"293","endLine":24,"endColumn":39,"suggestions":"323"},{"ruleId":"303","severity":1,"message":"304","line":75,"column":54,"nodeType":"305","endLine":75,"endColumn":140},{"ruleId":"287","severity":1,"message":"324","line":8,"column":12,"nodeType":"289","messageId":"290","endLine":8,"endColumn":21},{"ruleId":"291","severity":1,"message":"325","line":59,"column":7,"nodeType":"293","endLine":59,"endColumn":13,"suggestions":"326"},{"ruleId":"287","severity":1,"message":"327","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":14},{"ruleId":"291","severity":1,"message":"308","line":24,"column":7,"nodeType":"293","endLine":24,"endColumn":19,"suggestions":"328"},{"ruleId":"291","severity":1,"message":"329","line":30,"column":7,"nodeType":"293","endLine":30,"endColumn":29,"suggestions":"330"},{"ruleId":"278","replacedBy":"331"},{"ruleId":"280","replacedBy":"332"},{"ruleId":"291","severity":1,"message":"325","line":53,"column":7,"nodeType":"293","endLine":53,"endColumn":26,"suggestions":"333"},{"ruleId":"291","severity":1,"message":"325","line":72,"column":7,"nodeType":"293","endLine":72,"endColumn":25,"suggestions":"334"},{"ruleId":"291","severity":1,"message":"325","line":92,"column":7,"nodeType":"293","endLine":92,"endColumn":31,"suggestions":"335"},{"ruleId":"287","severity":1,"message":"336","line":13,"column":10,"nodeType":"289","messageId":"290","endLine":13,"endColumn":26},{"ruleId":"282","severity":1,"message":"283","line":8,"column":1,"nodeType":"284","endLine":54,"endColumn":3},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":41,"endColumn":5},{"ruleId":"287","severity":1,"message":"337","line":7,"column":8,"nodeType":"289","messageId":"290","endLine":7,"endColumn":12},{"ruleId":"287","severity":1,"message":"338","line":8,"column":10,"nodeType":"289","messageId":"290","endLine":8,"endColumn":18},{"ruleId":"282","severity":1,"message":"283","line":11,"column":1,"nodeType":"284","endLine":80,"endColumn":3},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":14,"endColumn":5},{"ruleId":"291","severity":1,"message":"308","line":21,"column":7,"nodeType":"293","endLine":21,"endColumn":19,"suggestions":"339"},{"ruleId":"287","severity":1,"message":"340","line":5,"column":10,"nodeType":"289","messageId":"290","endLine":5,"endColumn":25},{"ruleId":"287","severity":1,"message":"341","line":6,"column":10,"nodeType":"289","messageId":"290","endLine":6,"endColumn":27},{"ruleId":"282","severity":1,"message":"283","line":10,"column":1,"nodeType":"284","endLine":82,"endColumn":3},{"ruleId":"287","severity":1,"message":"342","line":4,"column":8,"nodeType":"289","messageId":"290","endLine":4,"endColumn":16},{"ruleId":"282","severity":1,"message":"283","line":9,"column":1,"nodeType":"284","endLine":81,"endColumn":3},{"ruleId":"343","severity":1,"message":"344","line":72,"column":71,"nodeType":"345","messageId":"346","endLine":72,"endColumn":79,"fix":"347"},{"ruleId":"291","severity":1,"message":"325","line":26,"column":7,"nodeType":"293","endLine":26,"endColumn":23,"suggestions":"348"},{"ruleId":"282","severity":1,"message":"283","line":4,"column":1,"nodeType":"284","endLine":57,"endColumn":3},{"ruleId":"287","severity":1,"message":"349","line":17,"column":12,"nodeType":"289","messageId":"290","endLine":17,"endColumn":26},{"ruleId":"287","severity":1,"message":"350","line":17,"column":27,"nodeType":"289","messageId":"290","endLine":17,"endColumn":44},{"ruleId":"291","severity":1,"message":"308","line":23,"column":7,"nodeType":"293","endLine":23,"endColumn":19,"suggestions":"351"},{"ruleId":"291","severity":1,"message":"329","line":29,"column":7,"nodeType":"293","endLine":29,"endColumn":29,"suggestions":"352"},{"ruleId":"282","severity":1,"message":"283","line":11,"column":1,"nodeType":"284","endLine":34,"endColumn":3},{"ruleId":"303","severity":1,"message":"304","line":17,"column":11,"nodeType":"305","endLine":17,"endColumn":63},{"ruleId":"303","severity":1,"message":"304","line":18,"column":11,"nodeType":"305","endLine":18,"endColumn":68},{"ruleId":"287","severity":1,"message":"353","line":12,"column":12,"nodeType":"289","messageId":"290","endLine":12,"endColumn":19},{"ruleId":"287","severity":1,"message":"297","line":12,"column":32,"nodeType":"289","messageId":"290","endLine":12,"endColumn":42},{"ruleId":"291","severity":1,"message":"354","line":31,"column":7,"nodeType":"293","endLine":31,"endColumn":29,"suggestions":"355"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":11,"endColumn":5},{"ruleId":"287","severity":1,"message":"353","line":12,"column":12,"nodeType":"289","messageId":"290","endLine":12,"endColumn":19},{"ruleId":"287","severity":1,"message":"297","line":12,"column":32,"nodeType":"289","messageId":"290","endLine":12,"endColumn":42},{"ruleId":"291","severity":1,"message":"354","line":31,"column":7,"nodeType":"293","endLine":31,"endColumn":29,"suggestions":"356"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":43,"endColumn":5},{"ruleId":"287","severity":1,"message":"314","line":1,"column":15,"nodeType":"289","messageId":"290","endLine":1,"endColumn":24},{"ruleId":"278","replacedBy":"357"},{"ruleId":"280","replacedBy":"358"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":14,"endColumn":5},{"ruleId":"278","replacedBy":"359"},{"ruleId":"280","replacedBy":"360"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":31,"endColumn":5},{"ruleId":"278","replacedBy":"361"},{"ruleId":"280","replacedBy":"362"},{"ruleId":"282","severity":1,"message":"283","line":1,"column":1,"nodeType":"284","endLine":30,"endColumn":5},"no-native-reassign",["363"],"no-negated-in-lhs",["364"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["363"],["364"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'setAlertMsg'. Either include them or remove the dependency array.","ArrayExpression",["365"],"React Hook useEffect has missing dependencies: 'setBannerMsg', 'setUser', and 'user'. Either include them or remove the dependency array.",["366"],"'userLoaded' is assigned a value but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setAlertMsg'. Either include it or remove the dependency array.",["367"],"React Hook useEffect has missing dependencies: 'location.pathname' and 'toggleThinNav'. Either include them or remove the dependency array.",["368"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["363"],["364"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["369"],["363"],["364"],"'Multiselect' is defined but never used.","'changeRequirementOfCertificate' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'nearAroundLocations' is assigned a value but never used.","'areLocationsLoading' is assigned a value but never used.",["370"],"React Hook useEffect has missing dependencies: 'refresh' and 'setBannerMsg'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["372"],"'isLoading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setBannerMsg'. Either include it or remove the dependency array.",["373"],"'Loader' is defined but never used.",["374"],"React Hook useEffect has a missing dependency: 'setFormType'. Either include it or remove the dependency array. If 'setFormType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["375"],["363"],["364"],["376"],["377"],["378"],"'useElementScroll' is defined but never used.","'img1' is defined but never used.","'subjects' is defined but never used.",["379"],"'FontAwesomeIcon' is defined but never used.","'faAngleDoubleDown' is defined but never used.","'AuthForm' is defined but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"380","text":"381"},["382"],"'isInfoCaptured' is assigned a value but never used.","'setIsInfoCaptured' is assigned a value but never used.",["383"],["384"],"'setUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setBannerMsg' and 'setFormType'. Either include them or remove the dependency array. If 'setFormType' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["385"],["386"],["363"],["364"],["363"],["364"],["363"],["364"],"no-global-assign","no-unsafe-negation",{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"393","fix":"394"},{"desc":"395","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"395","fix":"405"},{"desc":"406","fix":"407"},{"desc":"408","fix":"409"},{"desc":"410","fix":"411"},{"desc":"412","fix":"413"},{"desc":"395","fix":"414"},[3142,3142],"()",{"desc":"415","fix":"416"},{"desc":"395","fix":"417"},{"desc":"406","fix":"418"},{"desc":"419","fix":"420"},{"desc":"419","fix":"421"},"Update the dependencies array to be: [userLoaded, user, setAlertMsg, history, location.pathname]",{"range":"422","text":"423"},"Update the dependencies array to be: [data, setBannerMsg, setUser, user]",{"range":"424","text":"425"},"Update the dependencies array to be: [alertMsg, setAlertMsg]",{"range":"426","text":"427"},"Update the dependencies array to be: [location.pathname, scrollHeight, toggleThinNav]",{"range":"428","text":"429"},"Update the dependencies array to be: [setUser, userLoaded]",{"range":"430","text":"431"},"Update the dependencies array to be: [history, location.pathname, setAlertMsg, user, userLoaded]",{"range":"432","text":"433"},"Update the dependencies array to be: [data, refresh, setBannerMsg, user]",{"range":"434","text":"435"},"Update the dependencies array to be: [connectionSuccess, history, targetUserId]",{"range":"436","text":"437"},"Update the dependencies array to be: [setBannerMsg, user]",{"range":"438","text":"439"},{"range":"440","text":"431"},"Update the dependencies array to be: [registerationSuccess, setFormType]",{"range":"441","text":"442"},"Update the dependencies array to be: [id, setBannerMsg, setCurrentUser]",{"range":"443","text":"444"},"Update the dependencies array to be: [user, currentUser, setBannerMsg]",{"range":"445","text":"446"},"Update the dependencies array to be: [setReviews, currentUser, setBannerMsg]",{"range":"447","text":"448"},{"range":"449","text":"431"},"Update the dependencies array to be: [isDisconnected, setBannerMsg]",{"range":"450","text":"451"},{"range":"452","text":"431"},{"range":"453","text":"442"},"Update the dependencies array to be: [registerationSuccess, setBannerMsg, setFormType]",{"range":"454","text":"455"},{"range":"456","text":"455"},[3304,3321],"[userLoaded, user, setAlertMsg, history, location.pathname]",[6990,6996],"[data, setBannerMsg, setUser, user]",[959,969],"[alertMsg, setAlertMsg]",[1958,1972],"[location.pathname, scrollHeight, toggleThinNav]",[859,871],"[setUser, userLoaded]",[4319,4336],"[history, location.pathname, setAlertMsg, user, userLoaded]",[6253,6264],"[data, refresh, setBannerMsg, user]",[921,953],"[connectionSuccess, history, targetUserId]",[1916,1922],"[setBannerMsg, user]",[1045,1057],[1185,1207],"[registerationSuccess, setFormType]",[2316,2335],"[id, setBannerMsg, setCurrentUser]",[3025,3043],"[user, currentUser, setBannerMsg]",[3718,3742],"[setReviews, currentUser, setBannerMsg]",[817,829],[901,917],"[isDisconnected, setBannerMsg]",[1064,1076],[1206,1228],[1185,1207],"[registerationSuccess, setBannerMsg, setFormType]",[1189,1211]]